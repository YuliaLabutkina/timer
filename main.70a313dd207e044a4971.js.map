{"version":3,"sources":["webpack:///./index.js"],"names":["timerRef","document","querySelector","timeSelectionButton","buttonStartAndPauseRef","buttonTrowOffRef","timerTime","addEventListener","getAttribute","textContent","setAttribute","startTimer","setInterval","clearInterval","event","time","target","nodeName","removeAttribute"],"mappings":"kHAAA,qBAaMA,EAAWC,SAASC,cAAc,SAClCC,EAAsBF,SAASC,cAAc,mBAC7CE,EAAyBH,SAASC,cAAc,sCAChDG,EAAmBJ,SAASC,cAAc,mCAC5CI,EAAY,EAyDhBF,EAAuBG,iBAAiB,SAvBb,WAEvB,GAA0D,UAAvDH,EAAuBI,aAAa,gBAAqF,YAAvDJ,EAAuBI,aAAa,eAKrG,OAHAJ,EAAuBK,YAAc,QACrCL,EAAuBM,aAAa,cAAe,cAxBxC,WAEf,IAAMC,EAAaC,aAAY,WAE3B,GAA0D,YAAvDR,EAAuBI,aAAa,eAKvC,OAAiB,IAAdF,GACCA,GAAa,OACbN,EAASS,YAAT,SAA+BH,EAAY,GAAZ,IAAqBA,EAAcA,UAGtEO,cAAcF,GATVE,cAAcF,KAUnB,KAUCA,GAIJP,EAAuBK,YAAc,aACrCL,EAAuBM,aAAa,cAAe,cAavDP,EAAoBI,iBAAiB,SAjDpB,SAACO,GANE,IAACC,EAOY,WAA1BD,EAAME,OAAOC,WAChBb,EAAuBc,gBAAgB,WAAY,IARlCH,EASLD,EAAME,OAAOP,YARzBT,EAASS,YAAT,QAA+BM,EAC/BT,EAAYS,MAsDhBV,EAAiBE,iBAAiB,SAVf,WACfP,EAASS,YAAc,UACvBH,EAAY,EACZF,EAAuBK,YAAc,QACrCL,EAAuBM,aAAa,cAAe,SACnDN,EAAuBM,aAAa,WAAY,S","file":"main.70a313dd207e044a4971.js","sourcesContent":["import './styles.css';\n\n\n// Создайте таймер\n// Таймер можно выставить на 10с/20с/30с. ( У вас должно быть 3 кнопки с данными значениями)\n// У таймера должна быть возможность поставить на паузу, продолжить, сбросить, старт.\n//  Изначально должно быть всего 2 кнопки - старт и сбросить,\n// после старта таймера кнопка старта меняет состояние на пауза,\n// после нажатия на паузу кнопка меняет состояние на продолжить,\n// после нажатия на продолжить кнопка меняет состояние на пауза\n// после нажатия на сбросить кнопка старта снова имеет сочтояние старт\n\n\nconst timerRef = document.querySelector('.time');\nconst timeSelectionButton = document.querySelector('.button-wrapper');\nconst buttonStartAndPauseRef = document.querySelector('.start-buttons__button-start-pause');\nconst buttonTrowOffRef = document.querySelector('.start-buttons__button-trow-off');\nlet timerTime = 0;\n\n\nconst createTimer = (time) => {\n    timerRef.textContent = `00 : ${time}`;\n    timerTime = time;\n};\n\n\nconst setTimer = (event) => {\n    if(event.target.nodeName !== 'BUTTON') return;\n    buttonStartAndPauseRef.removeAttribute('disabled', '');\n    createTimer(event.target.textContent);\n};\n\nconst startTimer = () => {\n\n    const startTimer = setInterval(() => {\n\n        if(buttonStartAndPauseRef.getAttribute('data-action') === 'proceed') {\n            clearInterval(startTimer);\n            return;\n        };\n\n        if(timerTime !== 0) {\n            timerTime -= 1;\n            timerRef.textContent = `00 : ${timerTime < 10 ? `0${timerTime}` : timerTime}`;\n            return;\n        }\n        clearInterval(startTimer);\n    }, 1000);\n};\n\n\nconst startAndPauseTimer = () => {\n\n    if(buttonStartAndPauseRef.getAttribute('data-action') === 'start' || buttonStartAndPauseRef.getAttribute('data-action') === 'proceed') {\n\n        buttonStartAndPauseRef.textContent = 'Пауза';\n        buttonStartAndPauseRef.setAttribute('data-action', 'pause');\n        startTimer();\n        return\n    };\n\n    buttonStartAndPauseRef.textContent = \"Продолжить\";\n    buttonStartAndPauseRef.setAttribute('data-action', 'proceed');\n};\n\n\nconst resetTimer = () => {\n    timerRef.textContent = '00 : 00';\n    timerTime = 0;\n    buttonStartAndPauseRef.textContent = \"Старт\";\n    buttonStartAndPauseRef.setAttribute('data-action', 'start');\n    buttonStartAndPauseRef.setAttribute('disabled', '')\n};\n\nbuttonStartAndPauseRef.addEventListener('click', startAndPauseTimer);\ntimeSelectionButton.addEventListener('click', setTimer);\nbuttonTrowOffRef.addEventListener('click', resetTimer);"],"sourceRoot":""}